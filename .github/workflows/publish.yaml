name: Publish to PyPI

on:
  pull_request:
    branches:
    - main
    types:
    - closed

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  pypi-publish:
    if: github.event.pull_request.merged == true
    name: Upload release to PyPI

    runs-on: ubuntu-latest
    permissions:
      contents: 'write'
      id-token: 'write'

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Setup Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest

    - name: Install dependencies
      run: make install

    - name: Bump version
      id: bump_version
      run: |
        # Atualiza a branch com a main
        git pull origin main

        # Incrementa a versão (altere 'patch' para 'minor' ou 'major' conforme necessário)
        poetry version patch

        # Captura a nova versão
        NEW_VERSION=$(poetry version -s)

        # Escreve a nova versão no contexto do GitHub Actions
        echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_OUTPUT

        # Adiciona e commita as mudanças
        git config --local user.name "github-actions[bot]"
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git add pyproject.toml
        git commit -m "Bump version to $NEW_VERSION"
        
        # Cria a tag
        git tag v$NEW_VERSION

    - name: Push changes
      uses: ad-m/github-push-action@v0.6.0
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: main
        tags: true

    - name: Create GitHub Release
      uses: ncipollo/release-action@v1
      with:
        tag: v${{ steps.bump_version.outputs.NEW_VERSION }}
        name: Release v${{ steps.bump_version.outputs.NEW_VERSION }}
        body: |
          ## Changes
          - Bumped version to v${{ steps.bump_version.outputs.NEW_VERSION }}
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Build package
      run: poetry build

    - name: Publish package distributions to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
